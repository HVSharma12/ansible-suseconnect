---
- name: Call suseconnect status
  ansible.builtin.include_tasks: suseconnect-status.yml

- name: Register system
  when:
    - ( __suseconnect_status[suseconnect_base_product['product'] | default(ansible_distribution)] is not defined or
        __suseconnect_status[suseconnect_base_product['product'] | default(ansible_distribution)]['status'] != 'Registered'
      ) or suseconnect_reregister
  block:
    - name: Register
      ansible.builtin.command:
        cmd: >-
          {{ __suseconnect_register_command }} {{ __command_args }}
      vars:
        __suseconnect_register_command: >-
          {% if __suseconnect_is_registercloudguest %}
            {{ __suseconnect_commands_dict.register.cloud }}
          {% elif ansible_distribution == 'SL-Micro' and not __suseconnect_is_registercloudguest %}
            {{ __suseconnect_commands_dict.register.transactional }}
          {% else %}
            {{ __suseconnect_commands_dict.register.general }}
          {% endif %}
        __command_args: >-
          {%- if suseconnect_base_product['key'] is defined %} -r {{ suseconnect_base_product['key'] }}
          {% endif %}{%- if suseconnect_base_product['email'] is defined %} -e {{ suseconnect_base_product['email'] }}
          {% endif %}
      register: __suseconnect_register_result
      changed_when: "__suseconnect_register_result.rc == 0"
      failed_when: "__suseconnect_register_result.rc != 0"
      no_log: "{{ __suseconnect_no_log }}"

  rescue:
    - name: Fail if registration failed
      ansible.builtin.fail:
        msg: >-
          Registration failed. Please ensure that the registration code is valid!
          Error details: {{ __suseconnect_register_result.stderr | default('No error output available') }}
          {{ __suseconnect_register_result.stdout | default('No stdout output available') }}
